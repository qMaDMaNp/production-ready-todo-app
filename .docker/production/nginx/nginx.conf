events {
    worker_connections 1024;
}

http {
    server {
        listen 80;
        listen [::]:80;
        server_name local-todo.com www.local-todo.com;

        location ~ /.well-known/acme-challenge {
            allow all;
            root /var/www/html;
        }

        location / {
            rewrite ^ https://$host$request_uri? permanent;
        }
    }

    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name local-todo.com www.local-todo.com;

        server_tokens off;

        ssl_certificate /etc/letsencrypt/live/local-todo.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/local-todo.com/privkey.pem;
        ssl_dhparam /etc/ssl/certs/dhparam.pem;

        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers on;
        ssl_ciphers "ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256";

        ssl_buffer_size 8k;
        ssl_ecdh_curve secp384r1;
        ssl_session_tickets off;
        ssl_stapling on;
        ssl_stapling_verify on;
        resolver 8.8.8.8;

        location / {
            proxy_pass http://client:80;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /api/ {
            proxy_pass http://server:4444;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # add_header X-Frame-Options "SAMEORIGIN" always;
            # add_header X-XSS-Protection "1; mode=block" always;
            # add_header X-Content-Type-Options "nosniff" always;
            # add_header Referrer-Policy "no-referrer-when-downgrade" always;
            # add_header Content-Security-Policy "default-src * data: 'unsafe-eval' 'unsafe-inline'" always;

            # add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
            # enable strict transport security only if you understand the implications
        }

        # /usr/share/nginx/html
        root /var/www/html;
        index index.html index.htm index.nginx-debian.html;
    }
}